// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  role      String   @default("doctor") // doctor, admin
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Patient {
  id                   String    @id @default(cuid())
  name                 String
  age                  Int
  condition            String
  photoUrl             String?
  deviceId             String?   @unique
  transmissionsCount   Int       @default(0)
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  lastTransmission     DateTime  @default(now())
  
  // Current vital signs (latest reading)
  currentHeartRate          Int?
  currentOxygenSaturation   Int?
  currentTemperature        Float?
  
  // Vital signs history
  vitalSigns           VitalSigns[]

  // Associated transmission device
  transmitterId        String?
  
  @@map("patients")
}

model VitalSigns {
  id                  String   @id @default(cuid())
  patientId           String
  heartRate           Int      // BPM
  oxygenSaturation    Int      // %
  temperature         Float    // Celsius
  timestamp           DateTime @default(now())
  
  patient             Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  @@map("vital_signs")
}